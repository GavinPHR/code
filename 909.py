# Snakes and Ladders
from typing import List


class Solution:
    def flatten(self, board):
        ans = []
        flag = True
        acc = 0
        for i in range(len(board) - 1, -1, -1):
            if flag:
                for x in board[i]:
                    if x == -1:
                        ans.append(acc)
                    else:
                        ans.append(x - 1)
                    acc += 1
                flag = False
            else:
                for j in range(len(board[i]) - 1, -1, -1):
                    if board[i][j] == -1:
                        ans.append(acc)
                    else:
                        ans.append(board[i][j] - 1)
                    acc += 1
                flag = True
        return ans


    def snakesAndLadders(self, board: List[List[int]]) -> int:
        flat = self.flatten(board)
        print(flat)
        length = len(board) ** 2
        marked = [float('inf')] * length
        def search(x, current):
            if current >= marked[-1]:
                return
            l, r = x + 1, x + 7
            if r >= length:
                if current + 1 < marked[-1]:
                    marked[-1] = current + 1
                return
            for i in range(l, r):
                if marked[i] <= current + 1:
                    continue
                marked[i] = current + 1
                if flat[i] == length - 1:
                    if current + 1 < marked[-1]:
                        marked[-1] = current + 1
                    continue
                search(flat[i], current + 1)
            return
        search(0, 0)
        print(marked)
        return marked[-1] if marked[-1] != float('inf') else -1







if __name__ == '__main__':
    b = [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,102,-1,-1,-1,-1,-1,-1,-1],[-1,147,123,301,104,391,-1,-1,-1,-1,-1,345,115,-1,203,-1,-1,183,-1,148],[338,291,-1,-1,85,-1,-1,-1,-1,373,-1,-1,-1,-1,167,-1,-1,-1,246,-1],[50,239,-1,256,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,102,-1,128,138,-1,-1,-1,-1,-1,-1,54,-1,-1,68],[-1,-1,-1,250,-1,-1,281,350,-1,-1,-1,-1,384,-1,129,-1,-1,-1,-1,-1],[-1,-1,-1,-1,129,-1,-1,-1,59,9,-1,316,-1,-1,-1,234,-1,320,-1,-1],[217,-1,6,-1,-1,-1,331,-1,-1,-1,-1,-1,287,371,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,251,-1,-1,-1,-1,-1,102,-1,-1,83,-1,-1,243],[-1,173,-1,269,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,369,-1,-1,-1,81,-1],[58,-1,144,-1,-1,-1,-1,-1,30,-1,-1,-1,-1,-1,268,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,394,-1,-1,-1,170,-1,37,-1,-1,-1,-1,-1,-1],[-1,-1,-1,368,-1,-1,-1,-1,329,-1,-1,309,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,91,-1,-1,-1,335,-1,-1,-1,-1,-1,-1],[374,-1,-1,-1,-1,53,-1,255,-1,-1,-1,-1,-1,-1,141,286,-1,-1,-1,-1],[-1,-1,-1,-1,-1,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[328,373,-1,-1,-1,326,-1,179,-1,-1,82,-1,-1,-1,-1,331,357,-1,-1,-1],[-1,198,-1,-1,-1,-1,-1,231,94,-1,-1,-1,70,330,-1,-1,-1,-1,-1,385],[213,-1,-1,-1,231,-1,-1,-1,318,-1,-1,-1,95,-1,-1,-1,-1,-1,-1,-1],[-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,104,-1,-1,-1,-1,258,-1,-1,-1]]
    s = Solution()
    print(s.snakesAndLadders(b))